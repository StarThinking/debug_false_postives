my_type=hypothesis
proj=yarn
u_test=org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list[1]=yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 15335041162
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 15299599442
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 17935240492
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 20898706774
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 20023750438
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 17331760328
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 18568386802
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 16602663248
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 16944200344
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 15796295600
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 15920581596
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 13980653905
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 12986785498
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 14772969420
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 14080003086
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 13797736927
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 12957251677
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 16248611256
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 16130554277
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@1024@@@2048
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:2048, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 15509055532
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 17032677094
---> v1v1 and v2v2 test test suceeded.
early stop after 7 is satisfied
v1v2 failed with probability 7 out of 7
v1v1v2v2 failed with probability 0 out of 7
Total execution time in seconds : 338
0
