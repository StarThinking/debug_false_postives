my_type=hypothesis
proj=yarn
u_test=org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list[1]=yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 29232540239
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 27057669910
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 30526868861
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 24966719202
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 22849982008
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 25387178030
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 25653090066
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 22854386655
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 25245244563
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 26100296949
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 24796716116
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 29001612898
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 34227588767
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 27756484465
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 26122881126
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 30970495890
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 30606818367
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 33099134861
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 31928533744
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-3@@@512@@@1024
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:1024, vCores:1>> but was:<<memory:512, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 31488764089
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 30539372404
---> v1v1 and v2v2 test test suceeded.
early stop after 7 is satisfied
v1v2 failed with probability 7 out of 7
v1v1v2v2 failed with probability 0 out of 7
Total execution time in seconds : 590
0
