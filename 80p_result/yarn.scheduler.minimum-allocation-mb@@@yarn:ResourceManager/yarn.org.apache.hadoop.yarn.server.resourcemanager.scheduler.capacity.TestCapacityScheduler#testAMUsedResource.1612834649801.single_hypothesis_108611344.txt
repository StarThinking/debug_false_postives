my_type=hypothesis
proj=yarn
u_test=org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list[1]=yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 13034015551
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 11671166327
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 11406256181
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 11518145201
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 12464877583
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 12923821615
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 12071969359
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 12008595102
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 11617170581
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 12506379656
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 11847628623
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 12518538029
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 12301615190
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 12872658613
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 12009652259
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 13172208466
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 13565509284
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 12741301476
---> v1v1 and v2v2 test test suceeded.
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v2 running time = 12435549037
---> v1v2 test failed.
proj: yarn
u_test: org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
h_list: yarn.scheduler.minimum-allocation-mb@@@yarn:ResourceManager@@@-2@@@1024@@@512
vv_mode: v1v2
result: FAIL
failureMessage: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
stackTrace: java.lang.AssertionError: RMApp does not containes minimum allocation expected:<<memory:512, vCores:1>> but was:<<memory:1024, vCores:1>>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler.testAMUsedResource(TestCapacityScheduler.java:3692)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:748)


updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v1v1 running time = 12526258241
updating test result for file org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.TestCapacityScheduler#testAMUsedResource
v2v2 running time = 12919941797
---> v1v1 and v2v2 test test suceeded.
early stop after 7 is satisfied
v1v2 failed with probability 7 out of 7
v1v1v2v2 failed with probability 0 out of 7
Total execution time in seconds : 260
0
